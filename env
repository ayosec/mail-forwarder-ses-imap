#!/bin/bash
#
# This script creates a new container to launch the Python tools used to manage
# the template defined in this repository.
#
# The $HOME directory and the PIP files are stored in a volume.
#
# With no arguments, executes a bash shell.

set -euo pipefail

declare -a RUNCMD

IMAGE=python:3-slim

APPNAME=mail-forwarder-aws-ses

ROOTDIR=$(git rev-parse --show-toplevel)

PIP_DIRECTORY=/opt/pip

if [ "$(pwd)" = "$ROOTDIR" ]
then
  RELDIR=""
else
  RELDIR=$(pwd | xargs -0 realpath --relative-to="$ROOTDIR")
fi

# Main docker-run arguments
RUNCMD+=(
  --name "$APPNAME-$(printf '%(%s)T')"
  --rm
  -ti
  -u "$UID"
  -e HOME=/home/source
  -e "PIP_CACHE_DIR=$PIP_DIRECTORY/_cache"
  -e "PIP_PREFIX=$PIP_DIRECTORY"
  -e "PYTHONPATH=$PIP_DIRECTORY/lib/python3.10/site-packages"
  -e "PATH=/usr/local/bin:/usr/bin:/bin:$PIP_DIRECTORY/bin"
  -v "$ROOTDIR:/source"
  -w "/source/$RELDIR"
)

# Initialize volumes, if they are missing.
initvol() {
  volname="$APPNAME-$1"
  mountpath=$2

  if [ -z "$(docker volume ls -q -f "name=$volname")" ]
  then
    printf 'New volume: '
    docker volume create "$volname"
    docker run --rm -v "$volname:/vol" \
      "$IMAGE"                         \
      chown "$UID:$UID" /vol
  fi

  RUNCMD+=(
    --mount "type=volume,source=$volname,destination=$mountpath"
  )
}

initvol home "/home/source"
initvol pip "$PIP_DIRECTORY"

if [ $# -eq 0 ]
then
  set -- bash
fi

exec docker run "${RUNCMD[@]}" "$IMAGE" "$@"
